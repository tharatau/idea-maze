// Copyright 2022 The Chromium Authors
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

module chrome.mojom;

import "chrome/services/file_util/public/mojom/constants.mojom";
import "mojo/public/mojom/base/file.mojom";
import "mojo/public/mojom/base/read_only_file.mojom";

// Service that extracts a .TAR.XZ file. The .TAR.XZ file has to be a single
// file which is archived and compressed with tar and xz. That is, the .TAR.XZ
// file has to be a compressed tar archive with a single file entry. A
// compressed archive with multiple files will be rejected and
// chrome.file_util.mojom.ExtractionResult.kUnzipInvalidArchive will return via
// `result`. This service is designed to extract large files such as OS image
// files.
interface SingleFileTarXzFileExtractor {
  // Extracts the .TAR.XZ file `src_file` and writes the result to `dst_file`.
  // Progress is regularly reported via the passed `listener`.
  Extract(mojo_base.mojom.ReadOnlyFile src_file,
          mojo_base.mojom.File dst_file,
          pending_remote<SingleFileTarXzFileExtractorListener> listener)
          => (chrome.file_util.mojom.ExtractionResult result);
};

// Listener of a .TAR.XZ extraction operation.
interface SingleFileTarXzFileExtractorListener {
  // Regularly called during the .TAR.XZ extraction operation to report
  // progress. `total_bytes` indicates the size of the destination file after
  // extraction. `progress_bytes` indicates the bytes already written to the
  // destination file.
  OnProgress(uint64 total_bytes,
             uint64 progress_bytes);
};
