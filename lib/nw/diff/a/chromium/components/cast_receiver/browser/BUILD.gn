# Copyright 2022 The Chromium Authors
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

import("//build/config/chromecast_build.gni")

source_set("browser") {
  deps = [
    "//base",
    "//components/cast_receiver/common",
    "//components/media_control/browser",
    "//content/public/browser",
  ]
  public = [
    "public/application_client.h",
    "public/application_state_observer.h",
    "public/content_window_controls.h",
    "public/runtime_application.h",
    "public/streaming_resolution_observer.h",
  ]
  sources = [
    "application_client.cc",
    "content_window_controls.cc",
    "runtime_application.cc",
  ]
  friend = [ ":unit_tests" ]
}

source_set("permissions_manager") {
  public_deps = [
    "//third_party/blink/public/common:headers",
    "//url",
  ]
  deps = [
    "//base",
    "//content",
  ]
  public = [
    "public/permissions_manager.h",

    # TODO(crbug.com/1359579): Limit visibility to just this component.
    "permissions_manager_impl.h",
  ]
  sources = [ "permissions_manager_impl.cc" ]
  friend = [ ":unit_tests" ]
}

# TODO(crbug.com/1359579): Limit visibility to just this component.
source_set("page_state_observer") {
  deps = [
    "//base",
    "//content",
    "//net",
  ]
  sources = [
    "page_state_observer.cc",
    "page_state_observer.h",
  ]
}

# TODO(crbug.com/1359579): Limit visibility to just this component.
if (enable_cast_receiver || is_fuchsia) {
  source_set("runtime") {
    public_deps = [ "//third_party/blink/public/common" ]
    deps = [
      ":page_state_observer",
      "//base",
      "//components/cast/message_port:message_port_cast",
      "//components/cast/named_message_port_connector",
      "//components/on_load_script_injector/browser",
      "//content",
      "//ui/base",
    ]
    sources = [
      "bindings_message_port_connector.cc",
      "bindings_message_port_connector.h",
    ]
  }
}

source_set("unit_tests") {
  testonly = true
  deps = [
    ":browser",
    ":page_state_observer",
    ":permissions_manager",
    "//media",
    "//testing/gmock",
    "//testing/gtest",
    "//ui/gfx/geometry",
  ]
  sources = [
    "application_client_unittest.cc",
    "permissions_manager_impl_unittest.cc",
  ]

  if (enable_cast_receiver || is_fuchsia) {
    deps += [ ":runtime" ]
  }
}
