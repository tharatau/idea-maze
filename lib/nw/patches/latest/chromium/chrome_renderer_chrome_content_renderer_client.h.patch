diff -r -u --color up/chromium/chrome/renderer/chrome_content_renderer_client.h nw/chromium/chrome/renderer/chrome_content_renderer_client.h
--- up/chromium/chrome/renderer/chrome_content_renderer_client.h	2023-02-15 18:46:36.000000000 +0000
+++ nw/chromium/chrome/renderer/chrome_content_renderer_client.h	2023-02-19 17:36:30.127450548 +0000
@@ -19,7 +19,7 @@
 #include "chrome/common/media/webrtc_logging.mojom.h"
 #include "chrome/services/speech/buildflags/buildflags.h"
 #include "components/nacl/common/buildflags.h"
-#include "components/safe_browsing/content/renderer/phishing_classifier/phishing_model_setter_impl.h"
+//#include "components/safe_browsing/content/renderer/phishing_classifier/phishing_model_setter_impl.h"
 #include "components/spellcheck/spellcheck_buildflags.h"
 #include "content/public/renderer/content_renderer_client.h"
 #include "content/public/renderer/render_thread.h"
@@ -87,6 +87,13 @@
 
   ~ChromeContentRendererClient() override;
 
+  base::FilePath GetRootPath() override;
+  void willHandleNavigationPolicy(content::RenderFrame* rv,
+                                  blink::WebFrame* frame,
+                                  const blink::WebURLRequest& request,
+                                  blink::WebNavigationPolicy* policy,
+                                  blink::WebString* manifest,
+                                  bool new_win) override;
   void RenderThreadStarted() override;
   void ExposeInterfacesToBrowser(mojo::BinderMap* binders) override;
   void RenderFrameCreated(content::RenderFrame* render_frame) override;
@@ -277,8 +284,10 @@
 #if BUILDFLAG(ENABLE_PLUGINS)
   std::set<std::string> allowed_camera_device_origins_;
 #endif
+#if 0
   std::unique_ptr<safe_browsing::PhishingModelSetterImpl>
       phishing_model_setter_;
+#endif
 
   scoped_refptr<blink::ThreadSafeBrowserInterfaceBrokerProxy>
       browser_interface_broker_;
