diff -r -u --color up/chromium/chrome/browser/ui/browser_window.h nw/chromium/chrome/browser/ui/browser_window.h
--- up/chromium/chrome/browser/ui/browser_window.h	2023-02-15 18:46:36.000000000 +0000
+++ nw/chromium/chrome/browser/ui/browser_window.h	2023-02-19 17:36:29.391448685 +0000
@@ -9,6 +9,8 @@
 #include <string>
 #include <vector>
 
+#include "extensions/common/draggable_region.h"
+
 #include "base/callback_forward.h"
 #include "base/callback_helpers.h"
 #include "base/feature_list.h"
@@ -42,6 +44,8 @@
 #error This file should only be included on desktop.
 #endif
 
+class SkRegion;
+
 class Browser;
 class SharingDialog;
 struct SharingDialogData;
@@ -150,6 +154,15 @@
 
   //////////////////////////////////////////////////////////////////////////////
   // Browser specific methods:
+  virtual void SetShowInTaskbar(bool) = 0;
+  virtual void SetResizable(bool) = 0;
+  virtual void SetAllVisible(bool) = 0;
+  virtual void SetMinimumSize(gfx::Size) = 0;
+  virtual void SetMaximumSize(gfx::Size) = 0;
+  virtual void UpdateDraggableRegions(
+                                      const std::vector<extensions::DraggableRegion>& regions) = 0;
+  virtual SkRegion* GetDraggableRegion() = 0;
+  virtual void NativeWindowChanged() = 0;
 
   // Returns the browser window currently hosting `web_contents`. If no browser
   // window exists this returns null.
@@ -299,6 +312,10 @@
   // be called after the TabStripModel has an active tab.
   virtual void SetContentsSize(const gfx::Size& size) = 0;
 
+#if defined(OS_WIN)
+  virtual void SetPosition(const gfx::Point& pos) = 0;
+#endif
+
   // Updates the visual state of the specified page action icon if present on
   // the window.
   virtual void UpdatePageActionIcon(PageActionIconType type) = 0;
