diff -r -u --color up/chromium/third_party/blink/renderer/core/html/forms/html_input_element.cc nw/chromium/third_party/blink/renderer/core/html/forms/html_input_element.cc
--- up/chromium/third_party/blink/renderer/core/html/forms/html_input_element.cc	2023-02-15 18:46:36.000000000 +0000
+++ nw/chromium/third_party/blink/renderer/core/html/forms/html_input_element.cc	2023-02-24 06:16:33.568811188 +0000
@@ -2004,6 +2004,26 @@
   return input_type_->SupportsPopoverTriggering();
 }
 
+const AtomicString& HTMLInputElement::nwworkingdir() const
+{
+  return FastGetAttribute(html_names::kNwworkingdirAttr);
+}
+
+void HTMLInputElement::setNwworkingdir(const AtomicString& value)
+{
+  setAttribute(html_names::kNwworkingdirAttr, value);
+}
+
+String HTMLInputElement::nwsaveas() const
+{
+  return FastGetAttribute(html_names::kNwsaveasAttr);
+}
+
+void HTMLInputElement::setNwsaveas(const String& value)
+{
+  setAttribute(html_names::kNwsaveasAttr, AtomicString(value));
+}
+
 RadioButtonGroupScope* HTMLInputElement::GetRadioButtonGroupScope() const {
   // FIXME: Remove type check.
   if (type() != input_type_names::kRadio)
