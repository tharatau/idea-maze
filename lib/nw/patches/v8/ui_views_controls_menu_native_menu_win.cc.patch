diff -r -u --color up/chromium/ui/views/controls/menu/native_menu_win.cc nw/chromium/ui/views/controls/menu/native_menu_win.cc
--- up/chromium/ui/views/controls/menu/native_menu_win.cc	2023-02-21 19:03:23.000000000 +0000
+++ nw/chromium/ui/views/controls/menu/native_menu_win.cc	2023-02-24 20:54:39.176345820 +0000
@@ -53,7 +53,9 @@
                   !system_menu_for),
       system_menu_for_(system_menu_for),
       first_item_index_(0),
-      parent_(nullptr) {}
+      parent_(nullptr),
+      is_popup_menu_(true) {
+}
 
 NativeMenuWin::~NativeMenuWin() {
   items_.clear();
@@ -221,14 +223,18 @@
   } else {
     if (menu_)
       DestroyMenu(menu_);
-    menu_ = CreatePopupMenu();
+    if (is_popup_menu_)
+      menu_ = CreatePopupMenu();
+    else
+      menu_ = CreateMenu();
     // Rather than relying on the return value of TrackPopupMenuEx, which is
     // always a command identifier, instead we tell the menu to notify us via
     // our host window and the WM_MENUCOMMAND message.
     MENUINFO mi = {0};
     mi.cbSize = sizeof(mi);
     mi.fMask = MIM_STYLE | MIM_MENUDATA;
-    mi.dwStyle = MNS_NOTIFYBYPOS;
+    if (is_popup_menu_)
+      mi.dwStyle = MNS_NOTIFYBYPOS;
     mi.dwMenuData = reinterpret_cast<ULONG_PTR>(this);
     SetMenuInfo(menu_, &mi);
   }
