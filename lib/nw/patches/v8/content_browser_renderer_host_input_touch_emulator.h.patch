diff -r -u --color up/chromium/content/browser/renderer_host/input/touch_emulator.h nw/chromium/content/browser/renderer_host/input/touch_emulator.h
--- up/chromium/content/browser/renderer_host/input/touch_emulator.h	2023-02-21 19:03:23.000000000 +0000
+++ nw/chromium/content/browser/renderer_host/input/touch_emulator.h	2023-02-24 20:54:12.788493875 +0000
@@ -7,6 +7,8 @@
 
 #include <memory>
 
+#include "base/memory/weak_ptr.h"
+
 #include "base/callback.h"
 #include "base/containers/queue.h"
 #include "base/memory/raw_ptr.h"
@@ -29,6 +31,8 @@
 namespace content {
 
 class RenderWidgetHostViewBase;
+class RenderFrameHost;
+class RenderFrameHostImpl;
 
 // Emulates touch input. See TouchEmulator::Mode for more details.
 class CONTENT_EXPORT TouchEmulator : public ui::GestureProviderClient {
@@ -52,6 +56,8 @@
   void Enable(Mode mode, ui::GestureProviderConfigType config_type);
   void Disable();
 
+  void set_rfh_limit(base::WeakPtr<RenderFrameHostImpl> rfh) { rfh_limit_ = rfh; }
+  RenderFrameHost* rfh_limit() const { return (RenderFrameHost*)rfh_limit_.get(); }
   // Call when device scale factor changes.
   void SetDeviceScaleFactor(float device_scale_factor);
 
@@ -138,6 +144,7 @@
 
   const raw_ptr<TouchEmulatorClient> client_;
 
+  base::WeakPtr<RenderFrameHostImpl> rfh_limit_;
   // Emulator is enabled iff gesture provider is created.
   // Disabled emulator does only process touch acks left from previous
   // emulation. It does not intercept any events.
