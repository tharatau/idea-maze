diff -r -u --color up/chromium/chrome/browser/ui/tab_contents/chrome_web_contents_view_handle_drop.cc nw/chromium/chrome/browser/ui/tab_contents/chrome_web_contents_view_handle_drop.cc
--- up/chromium/chrome/browser/ui/tab_contents/chrome_web_contents_view_handle_drop.cc	2023-02-21 19:03:23.000000000 +0000
+++ nw/chromium/chrome/browser/ui/tab_contents/chrome_web_contents_view_handle_drop.cc	2023-02-24 20:54:08.356514311 +0000
@@ -23,6 +23,7 @@
 
 namespace {
 
+#if 0
 void CompletionCallback(
     content::DropData drop_data,
     std::unique_ptr<enterprise_connectors::FilesScanData> files_scan_data,
@@ -130,13 +131,15 @@
   base::WeakPtrFactory<HandleDropScanData> weakptr_factory_{this};
 };
 
+#endif
 }  // namespace
 
 void HandleOnPerformDrop(
     content::WebContents* web_contents,
     content::DropData drop_data,
     content::WebContentsViewDelegate::DropCompletionCallback callback) {
-  enterprise_connectors::ContentAnalysisDelegate::Data data;
+  //enterprise_connectors::ContentAnalysisDelegate::Data data;
+#if 0
   Profile* profile =
       Profile::FromBrowserContext(web_contents->GetBrowserContext());
   auto connector =
@@ -145,10 +148,14 @@
           : enterprise_connectors::AnalysisConnector::FILE_ATTACHED;
   if (!enterprise_connectors::ContentAnalysisDelegate::IsEnabled(
           profile, web_contents->GetLastCommittedURL(), &data, connector)) {
+#endif
+  if (true) { //!safe_browsing::DeepScanningDialogDelegate::IsEnabled(
+              //profile, web_contents->GetLastCommittedURL(), &data)) {
     std::move(callback).Run(std::move(drop_data));
     return;
   }
 
+#if 0
   // Collect the data that needs to be scanned.
   if (!drop_data.url_title.empty())
     data.text.push_back(base::UTF16ToUTF8(drop_data.url_title));
@@ -186,4 +193,5 @@
   if (!callback.is_null()) {
     std::move(callback).Run(std::move(drop_data));
   }
+#endif
 }
