diff -r -u --color up/chromium/services/preferences/tracked/tracked_persistent_pref_store_factory.cc nw/chromium/services/preferences/tracked/tracked_persistent_pref_store_factory.cc
--- up/chromium/services/preferences/tracked/tracked_persistent_pref_store_factory.cc	2023-02-15 18:46:36.000000000 +0000
+++ nw/chromium/services/preferences/tracked/tracked_persistent_pref_store_factory.cc	2023-02-24 06:16:32.296736046 +0000
@@ -104,6 +104,7 @@
 
   mojo::Remote<prefs::mojom::TrackedPreferenceValidationDelegate>
       validation_delegate;
+  if (config->validation_delegate)
   validation_delegate.Bind(std::move(config->validation_delegate));
   auto validation_delegate_ref = base::MakeRefCounted<base::RefCountedData<
       mojo::Remote<prefs::mojom::TrackedPreferenceValidationDelegate>>>(
@@ -113,13 +114,13 @@
                          GetExternalVerificationPrefHashStorePair(
                              *config, temp_scoped_dir_cleaner),
                          unprotected_configuration, mojo::NullRemote(),
-                         validation_delegate_ref, config->reporting_ids_count));
+                         nullptr, config->reporting_ids_count));
   std::unique_ptr<PrefHashFilter> protected_pref_hash_filter(new PrefHashFilter(
       CreatePrefHashStore(*config, true),
       GetExternalVerificationPrefHashStorePair(*config,
                                                temp_scoped_dir_cleaner),
       protected_configuration, std::move(config->reset_on_load_observer),
-      validation_delegate_ref, config->reporting_ids_count));
+      nullptr, config->reporting_ids_count));
 
   PrefHashFilter* raw_unprotected_pref_hash_filter =
       unprotected_pref_hash_filter.get();
