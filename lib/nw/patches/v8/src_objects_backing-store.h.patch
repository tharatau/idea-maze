diff -r -u --color up/v8/src/objects/backing-store.h nw/v8/src/objects/backing-store.h
--- up/v8/src/objects/backing-store.h	2023-02-10 19:02:29.000000000 +0000
+++ nw/v8/src/objects/backing-store.h	2023-02-25 19:08:24.062056030 +0000
@@ -80,12 +80,13 @@
                                                       void* allocation_base,
                                                       size_t allocation_length,
                                                       SharedFlag shared,
-                                                      bool free_on_destruct);
+                                                      bool free_on_destruct,
+                                                      bool is_nodejs = false);
 
   static std::unique_ptr<BackingStore> WrapAllocation(
       void* allocation_base, size_t allocation_length,
       v8::BackingStore::DeleterCallback deleter, void* deleter_data,
-      SharedFlag shared);
+      SharedFlag shared, bool is_nodejs = false);
 
   // Create an empty backing store.
   static std::unique_ptr<BackingStore> EmptyBackingStore(SharedFlag shared);
@@ -101,6 +102,7 @@
   bool is_shared() const { return is_shared_; }
   bool is_resizable_by_js() const { return is_resizable_by_js_; }
   bool is_wasm_memory() const { return is_wasm_memory_; }
+  bool is_node_js() const { return is_nodejs_; }
   bool has_guard_regions() const { return has_guard_regions_; }
   bool free_on_destruct() const { return free_on_destruct_; }
 
@@ -120,6 +122,7 @@
            buffer_start_ != nullptr;
   }
 
+  void set_nodejs(bool nodejs) { is_nodejs_ = nodejs; }
   // Wrapper around ArrayBuffer::Allocator::Reallocate.
   bool Reallocate(Isolate* isolate, size_t new_byte_length);
 
@@ -230,6 +233,7 @@
   // Backing stores for (Resizable|GrowableShared)ArrayBuffer
   bool is_resizable_by_js_ : 1;
   bool is_wasm_memory_ : 1;
+  bool is_nodejs_ : 1;
   bool holds_shared_ptr_to_allocator_ : 1;
   bool free_on_destruct_ : 1;
   bool has_guard_regions_ : 1;
