diff -r -u --color up/chromium/chrome/browser/lifetime/browser_close_manager.cc nw/chromium/chrome/browser/lifetime/browser_close_manager.cc
--- up/chromium/chrome/browser/lifetime/browser_close_manager.cc	2023-02-21 19:03:23.000000000 +0000
+++ nw/chromium/chrome/browser/lifetime/browser_close_manager.cc	2023-02-24 20:12:03.400812621 +0000
@@ -4,6 +4,8 @@
 
 #include "chrome/browser/lifetime/browser_close_manager.h"
 
+#include "chrome/browser/ui/views/frame/browser_view.h"
+
 #include <iterator>
 #include <vector>
 
@@ -47,7 +49,7 @@
 
 }  // namespace
 
-BrowserCloseManager::BrowserCloseManager() : current_browser_(nullptr) {
+BrowserCloseManager::BrowserCloseManager(bool force, bool user_force) : current_browser_(nullptr), force_(force), user_force_(user_force) {
 }
 
 BrowserCloseManager::~BrowserCloseManager() {
@@ -174,7 +176,10 @@
   bool ignore_unload_handlers = browser_shutdown::ShouldIgnoreUnloadHandlers();
 
   for (auto* browser : browser_list_copy) {
-    browser->window()->Close();
+    if (force_)
+      browser->window()->ForceClose();
+    else if (BrowserView::GetBrowserViewForBrowser(browser)->NWCanClose(user_force_))
+      browser->window()->ForceClose();
     if (ignore_unload_handlers) {
       // This path is hit during logoff/power-down. In this case we won't get
       // a final message and so we force the browser to be deleted.
