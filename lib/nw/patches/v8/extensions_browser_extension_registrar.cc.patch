diff -r -u --color up/chromium/extensions/browser/extension_registrar.cc nw/chromium/extensions/browser/extension_registrar.cc
--- up/chromium/extensions/browser/extension_registrar.cc	2023-02-21 19:03:23.000000000 +0000
+++ nw/chromium/extensions/browser/extension_registrar.cc	2023-02-24 20:54:13.708489632 +0000
@@ -8,6 +8,9 @@
 #include "base/callback_helpers.h"
 #include "base/check_op.h"
 #include "base/containers/contains.h"
+
+#include "content/nw/src/nw_content.h"
+
 #include "base/metrics/histogram_macros.h"
 #include "base/notreached.h"
 #include "build/chromeos_buildflags.h"
@@ -373,6 +376,9 @@
       orphaned_dev_tools_[extension_id] = std::move(agent_hosts);
     }
     path = enabled_extension->path();
+
+    nw::ReloadExtensionHook(enabled_extension);
+
     DisableExtension(extension_id, disable_reason::DISABLE_RELOAD);
     DCHECK(registry_->disabled_extensions().Contains(extension_id));
     reloading_extensions_.insert(extension_id);
@@ -411,6 +417,7 @@
   registry_->AddTerminated(extension);
   registry_->RemoveEnabled(extension_id);
   DeactivateExtension(extension.get(), UnloadedExtensionReason::TERMINATE);
+
 }
 
 void ExtensionRegistrar::UntrackTerminatedExtension(
@@ -573,9 +580,11 @@
   bool has_web_request_permission =
       extension->permissions_data()->HasAPIPermission(
           mojom::APIPermissionID::kWebRequest);
+#if 0
   // Event page-based extension cannot have the webRequest permission.
   DCHECK(!has_web_request_permission ||
          BackgroundInfo::IsServiceWorkerBased(extension));
+#endif
 
   // If there aren't any special cases, we're done.
   if (!has_orphaned_dev_tools && !is_component_extension &&
