diff -r -u --color up/chromium/content/browser/browser_main_loop.cc nw/chromium/content/browser/browser_main_loop.cc
--- up/chromium/content/browser/browser_main_loop.cc	2023-02-21 19:03:23.000000000 +0000
+++ nw/chromium/content/browser/browser_main_loop.cc	2023-02-24 20:12:09.136863422 +0000
@@ -437,6 +437,8 @@
 // The currently-running BrowserMainLoop.  There can be one or zero.
 BrowserMainLoop* g_current_browser_main_loop = nullptr;
 
+bool g_browser_main_loop_shutting_down = false;
+
 #if BUILDFLAG(IS_ANDROID)
 
 namespace {
@@ -957,6 +959,7 @@
   if (parts_)
     result_code_ = parts_->PreMainMessageLoopRun();
 
+#if 1
   // ShellBrowserMainParts initializes a ShellBrowserContext with user data
   // directory only in PreMainMessageLoopRun(). First-Party Sets handler needs
   // to access this directory, hence triggering after this stage has run.
@@ -967,6 +970,7 @@
             base::CommandLine::ForCurrentProcess()->GetSwitchValueASCII(
                 network::switches::kUseFirstPartySet)));
   }
+#endif
 
   variations::MaybeScheduleFakeCrash();
 
@@ -1104,8 +1108,9 @@
       base::BindOnce(base::IgnoreResult(
           &base::PermanentThreadAllowance::AllowBaseSyncPrimitives)));
 
-  if (RenderProcessHost::run_renderer_in_process())
-    RenderProcessHostImpl::ShutDownInProcessRenderer();
+#if 1 //defined(OS_ANDROID)
+  g_browser_main_loop_shutting_down = true;
+#endif
 
   if (parts_) {
     TRACE_EVENT0("shutdown",
@@ -1113,6 +1118,9 @@
     parts_->PostMainMessageLoopRun();
   }
 
+  if (RenderProcessHost::run_renderer_in_process())
+    RenderProcessHostImpl::ShutDownInProcessRenderer();
+
   // Request shutdown to clean up allocated resources on the IO thread.
   if (midi_service_) {
     TRACE_EVENT0("shutdown", "BrowserMainLoop::Subsystem:MidiService");
