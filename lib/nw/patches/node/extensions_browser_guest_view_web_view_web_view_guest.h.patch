diff -r -u --color up/chromium/extensions/browser/guest_view/web_view/web_view_guest.h nw/chromium/extensions/browser/guest_view/web_view/web_view_guest.h
--- up/chromium/extensions/browser/guest_view/web_view/web_view_guest.h	2023-02-15 18:46:36.000000000 +0000
+++ nw/chromium/extensions/browser/guest_view/web_view/web_view_guest.h	2023-02-24 06:16:29.048543933 +0000
@@ -64,6 +64,8 @@
       int embedder_process_id,
       int web_view_instance_id);
 
+  void ShowDevTools(bool show, int proc_id, int guest_id);
+  void InspectElement(int x, int y);
   // Get the current zoom.
   double GetZoom() const;
 
@@ -199,6 +201,7 @@
   bool RequiresSslInterstitials() const final;
 
   // WebContentsDelegate implementation.
+  bool CanLoadFileSubresource(const GURL& url) final;
   void CloseContents(content::WebContents* source) final;
   bool HandleContextMenu(content::RenderFrameHost& render_frame_host,
                          const content::ContextMenuParams& params) final;
@@ -239,7 +242,7 @@
                           int opener_render_frame_id,
                           const std::string& frame_name,
                           const GURL& target_url,
-                          content::WebContents* new_contents) final;
+                          content::WebContents* new_contents, const std::u16string& nw_window_manifest) final;
   void EnterFullscreenModeForTab(
       content::RenderFrameHost* requesting_frame,
       const blink::mojom::FullscreenOptions& options) final;
@@ -328,6 +331,7 @@
 
   // Stores whether the contents of the guest can be transparent.
   bool allow_transparency_ = false;
+  bool allow_nw_;
 
   // Handles the JavaScript dialog requests.
   JavaScriptDialogHelper javascript_dialog_helper_;
