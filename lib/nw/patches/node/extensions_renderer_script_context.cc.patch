diff -r -u --color up/chromium/extensions/renderer/script_context.cc nw/chromium/extensions/renderer/script_context.cc
--- up/chromium/extensions/renderer/script_context.cc	2023-02-21 19:03:23.000000000 +0000
+++ nw/chromium/extensions/renderer/script_context.cc	2023-02-24 20:12:10.320873329 +0000
@@ -202,7 +202,8 @@
       context_id_(base::UnguessableToken::Create()),
       safe_builtins_(this),
       isolate_(v8_context->GetIsolate()),
-      service_worker_version_id_(blink::mojom::kInvalidServiceWorkerVersionId) {
+      service_worker_version_id_(blink::mojom::kInvalidServiceWorkerVersionId),
+      weak_factory_(this) {
   VLOG(1) << "Created context:\n" << GetDebugString();
   v8_context_.AnnotateStrongRetainer("extensions::ScriptContext::v8_context_");
   if (web_frame_)
@@ -396,8 +397,10 @@
 GURL ScriptContext::GetAccessCheckedFrameURL(
     const blink::WebLocalFrame* frame) {
   const blink::WebURL& weburl = frame->GetDocument().Url();
-  if (weburl.IsEmpty()) {
+  if (weburl.IsEmpty() || GURL(weburl) == GURL("about:blank")) {
     blink::WebDocumentLoader* document_loader = CurrentDocumentLoader(frame);
+    // NWJS fix for iframe-remote race condition on win release
+    // against 79b64c3e741cc9c6afbb23885945831a45c6baa5
     if (document_loader &&
         frame->GetSecurityOrigin().CanAccess(
             blink::WebSecurityOrigin::Create(document_loader->GetUrl()))) {
@@ -481,6 +484,9 @@
     return false;
   }
 
+  if (extension() && extension()->is_nwjs_app())
+    return true;
+
   Feature::Availability availability = GetAvailability(name);
   if (!availability.is_available()) {
     isolate()->ThrowException(v8::Exception::Error(
