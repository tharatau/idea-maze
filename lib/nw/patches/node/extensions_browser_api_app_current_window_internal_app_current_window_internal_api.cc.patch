diff -r -u --color up/chromium/extensions/browser/api/app_current_window_internal/app_current_window_internal_api.cc nw/chromium/extensions/browser/api/app_current_window_internal/app_current_window_internal_api.cc
--- up/chromium/extensions/browser/api/app_current_window_internal/app_current_window_internal_api.cc	2023-02-21 19:03:23.000000000 +0000
+++ nw/chromium/extensions/browser/api/app_current_window_internal/app_current_window_internal_api.cc	2023-02-24 20:12:10.192872258 +0000
@@ -26,6 +26,7 @@
 namespace Show = app_current_window_internal::Show;
 namespace SetBounds = app_current_window_internal::SetBounds;
 namespace SetSizeConstraints = app_current_window_internal::SetSizeConstraints;
+namespace SetResizable = app_current_window_internal::SetResizable;
 namespace SetIcon = app_current_window_internal::SetIcon;
 namespace SetShape = app_current_window_internal::SetShape;
 namespace SetAlwaysOnTop = app_current_window_internal::SetAlwaysOnTop;
@@ -264,6 +265,16 @@
 }
 
 ExtensionFunction::ResponseAction
+AppCurrentWindowInternalSetResizableFunction::Run() {
+  std::unique_ptr<SetResizable::Params> params(
+                                               SetResizable::Params::Create(args()));
+  CHECK(params.get());
+  window()->GetBaseWindow()->SetResizable(params->flag);
+  window()->OnNativeWindowChanged();
+  return RespondNow(NoArguments());
+}
+
+ExtensionFunction::ResponseAction
 AppCurrentWindowInternalSetSizeConstraintsFunction::Run() {
   std::unique_ptr<SetSizeConstraints::Params> params(
       SetSizeConstraints::Params::Create(args()));
@@ -352,8 +363,10 @@
 
 ExtensionFunction::ResponseAction
 AppCurrentWindowInternalSetAlwaysOnTopFunction::Run() {
+
   // TODO(devlin): Can't this be done with the feature files?
-  if (!extension()->permissions_data()->HasAPIPermission(
+  if (extension() != nullptr && // NWJS#5738
+      !extension()->permissions_data()->HasAPIPermission(
           extensions::mojom::APIPermissionID::kAlwaysOnTopWindows)) {
     return RespondNow(Error(kAlwaysOnTopPermission));
   }
