diff -r -u --color up/chromium/chrome/browser/sessions/session_data_service.cc nw/chromium/chrome/browser/sessions/session_data_service.cc
--- up/chromium/chrome/browser/sessions/session_data_service.cc	2023-02-15 18:46:36.000000000 +0000
+++ nw/chromium/chrome/browser/sessions/session_data_service.cc	2023-02-24 06:16:21.908121388 +0000
@@ -4,6 +4,11 @@
 
 #include "chrome/browser/sessions/session_data_service.h"
 
+#include "content/nw/src/nw_content.h"
+#include "extensions/browser/extension_system.h"
+#include "extensions/browser/app_window/app_window_registry.h"
+#include "chrome/browser/extensions/extension_service.h"
+
 #include "base/bind.h"
 #include "base/feature_list.h"
 #include "base/metrics/histogram_functions.h"
@@ -138,6 +143,23 @@
       return;
   }
 
+  std::string id = nw::GetMainExtensionId();
+  base::FilePath path;
+  extensions::ExtensionRegistry* extension_registry =
+    extensions::ExtensionRegistry::Get(ProfileManager::GetLastUsedProfileIfLoaded());
+  if (!id.empty() && extension_registry) {
+    const extensions::Extension* extension =
+      extension_registry->GetExtensionById(id, extensions::ExtensionRegistry::EVERYTHING);
+    if (extension) {
+      if (extensions::ProcessManager::Get(profile_)->GetLazyKeepaliveCount(extension) > 0)
+        return;
+    }
+    //additional checking for NWJS#5355
+    extensions::AppWindowRegistry* registry = extensions::AppWindowRegistry::Factory::GetForBrowserContext(profile_, false);
+    if (registry && !registry->app_windows().empty())
+      return;
+  }
+
   // Session cookies should stay alive on platforms where the browser stays
   // alive without windows.
   bool skip_session_cookies = browser_defaults::kBrowserAliveWithNoWindows;
