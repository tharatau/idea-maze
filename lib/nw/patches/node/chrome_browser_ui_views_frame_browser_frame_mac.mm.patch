diff -r -u --color up/chromium/chrome/browser/ui/views/frame/browser_frame_mac.mm nw/chromium/chrome/browser/ui/views/frame/browser_frame_mac.mm
--- up/chromium/chrome/browser/ui/views/frame/browser_frame_mac.mm	2023-02-15 18:46:36.000000000 +0000
+++ nw/chromium/chrome/browser/ui/views/frame/browser_frame_mac.mm	2023-02-24 06:16:22.476155026 +0000
@@ -6,6 +6,8 @@
 
 #import "chrome/browser/ui/views/frame/browser_frame_mac.h"
 
+#include "ui/display/display.h"
+
 #import "base/mac/foundation_util.h"
 #include "chrome/app/chrome_command_ids.h"
 #include "chrome/browser/apps/app_shim/app_shim_host_mac.h"
@@ -133,6 +135,7 @@
 // BrowserFrameMac, views::NativeWidgetMac implementation:
 
 int32_t BrowserFrameMac::SheetOffsetY() {
+  return 0; //NWJS#7349
   // ModalDialogHost::GetDialogPosition() is relative to the host view. In
   // practice, this ends up being the widget's content view.
   web_modal::WebContentsModalDialogHost* dialog_host =
@@ -362,8 +365,16 @@
   } else if (browser_view_->GetIsPictureInPictureType()) {
     params->window_class = remote_cocoa::mojom::WindowClass::kFrameless;
     params->style_mask = NSWindowStyleMaskFullSizeContentView;
+  } else if (browser_view_->browser()->is_frameless()) {
+    params->window_class = remote_cocoa::mojom::WindowClass::kFrameless;
+    params->style_mask = NSWindowStyleMaskTitled | NSWindowStyleMaskClosable |
+                         NSWindowStyleMaskMiniaturizable |
+                         NSWindowStyleMaskResizable |
+                         NSWindowStyleMaskFullSizeContentView;
   } else {
     params->window_class = remote_cocoa::mojom::WindowClass::kDefault;
+    if (widget_params.remove_standard_frame)
+      params->style_mask = NSWindowStyleMaskBorderless;
   }
   params->animation_enabled = true;
 }
