diff -r -u --color up/chromium/content/browser/devtools/render_frame_devtools_agent_host.cc nw/chromium/content/browser/devtools/render_frame_devtools_agent_host.cc
--- up/chromium/content/browser/devtools/render_frame_devtools_agent_host.cc	2023-02-15 18:46:36.000000000 +0000
+++ nw/chromium/content/browser/devtools/render_frame_devtools_agent_host.cc	2023-02-24 06:16:27.780468909 +0000
@@ -227,6 +227,8 @@
   }
   RenderProcessHost* rph = rfh->GetProcess();
   std::set<url::Origin> process_origins;
+  std::set<url::Origin> opaque_process_origins;
+  opaque_process_origins.insert(url::Origin());
   for (const auto& entry : g_agent_host_instances.Get()) {
     RenderFrameHostImpl* frame_host = entry.second->frame_host_;
     if (!frame_host)
@@ -241,7 +243,8 @@
   }
   GetNetworkService()->SetRawHeadersAccess(
       rph->GetID(),
-      std::vector<url::Origin>(process_origins.begin(), process_origins.end()));
+      std::vector<url::Origin>(opaque_process_origins.begin(),
+                               opaque_process_origins.end()));
 }
 
 RenderFrameDevToolsAgentHost::RenderFrameDevToolsAgentHost(
@@ -322,6 +325,9 @@
 #if BUILDFLAG(USE_VIZ_DEBUGGER)
   session->CreateAndAddHandler<protocol::VisualDebuggerHandler>();
 #endif
+  RenderWidgetHostViewBase* view =
+    static_cast<RenderWidgetHostViewBase*>(web_contents()->GetPrimaryMainFrame()->GetView());
+  if (!view->IsRenderWidgetHostViewChildFrame())
   if (!frame_tree_node_ || !frame_tree_node_->parent())
     session->CreateAndAddHandler<protocol::OverlayHandler>();
   session->CreateAndAddHandler<protocol::NetworkHandler>(
