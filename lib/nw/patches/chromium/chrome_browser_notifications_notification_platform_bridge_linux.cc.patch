diff -r -u --color up/chromium/chrome/browser/notifications/notification_platform_bridge_linux.cc nw/chromium/chrome/browser/notifications/notification_platform_bridge_linux.cc
--- up/chromium/chrome/browser/notifications/notification_platform_bridge_linux.cc	2023-02-21 19:03:23.000000000 +0000
+++ nw/chromium/chrome/browser/notifications/notification_platform_bridge_linux.cc	2023-02-24 20:12:03.504813680 +0000
@@ -1,7 +1,7 @@
 // Copyright 2017 The Chromium Authors
 // Use of this source code is governed by a BSD-style license that can be
 // found in the LICENSE file.
-
+#include "content/nw/src/nw_base.h"
 #include "chrome/browser/notifications/notification_platform_bridge_linux.h"
 
 #include <algorithm>
@@ -625,7 +625,11 @@
     dbus::MessageWriter writer(&method_call);
 
     // app_name
-    writer.AppendString(l10n_util::GetStringUTF8(IDS_PRODUCT_NAME));
+    std::string product_string = l10n_util::GetStringUTF8(IDS_PRODUCT_NAME);
+    std::string* str = nw::package()->root()->FindString("product_string");
+    if (str)
+      product_string = *str;
+    writer.AppendString(product_string);
 
     writer.AppendUint32(data->dbus_id);
 
@@ -760,12 +764,14 @@
       // instead makes the entire notification clickable.
       actions.push_back(kDefaultButtonId);
       actions.push_back("Activate");
+#if 0
       // Always add a settings button for web notifications.
       if (notification->should_show_settings_button()) {
         actions.push_back(kSettingsButtonId);
         actions.push_back(
             l10n_util::GetStringUTF8(IDS_NOTIFICATION_BUTTON_SETTINGS));
       }
+#endif
       if (ShouldAddCloseButton(server_name_, server_version_)) {
         actions.push_back(kCloseButtonId);
         actions.push_back(
Only in nw/chromium/chrome/browser: nwjs_resources.grd
