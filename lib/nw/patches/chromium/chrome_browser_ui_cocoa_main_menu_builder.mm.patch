diff -r -u --color up/chromium/chrome/browser/ui/cocoa/main_menu_builder.mm nw/chromium/chrome/browser/ui/cocoa/main_menu_builder.mm
--- up/chromium/chrome/browser/ui/cocoa/main_menu_builder.mm	2023-02-21 19:03:23.000000000 +0000
+++ nw/chromium/chrome/browser/ui/cocoa/main_menu_builder.mm	2023-02-25 19:07:10.265784318 +0000
@@ -22,6 +22,8 @@
 #import "ui/base/l10n/l10n_util_mac.h"
 #include "ui/strings/grit/ui_strings.h"
 
+#pragma clang diagnostic ignored "-Wunused-function"
+
 namespace chrome {
 namespace {
 
@@ -43,7 +45,7 @@
                 .string_format_1(product_name)
                 .tag(IDC_ABOUT)
                 .target(app_delegate)
-                .action(@selector(orderFrontStandardAboutPanel:)),
+                /*.action(@selector(orderFrontStandardAboutPanel:))*/,
                 Item().is_separator(),
                 Item(IDS_PREFERENCES)
                     .tag(IDC_OPTIONS)
@@ -58,8 +60,8 @@
                     .command_id(IDC_IMPORT_SETTINGS)
                     .remove_if(is_pwa),
                 Item().is_separator(),
-                Item(IDS_SERVICES_MAC).tag(-1).submenu({}),
-                Item().is_separator(),
+                //Item(IDS_SERVICES_MAC).tag(-1).submenu({}),
+                //Item().is_separator(),
                 Item(IDS_HIDE_APP_MAC)
                     .string_format_1(product_name)
                     .tag(IDC_HIDE_APP)
@@ -179,6 +181,7 @@
                 Item(IDS_EDIT_SELECT_ALL_MAC)
                     .tag(IDC_CONTENT_CONTEXT_SELECTALL)
                     .action(@selector(selectAll:)),
+#if 0
                 Item().is_separator(),
                 Item(IDS_EDIT_FIND_SUBMENU_MAC).tag(IDC_FIND_MENU).submenu({
                   Item(IDS_EDIT_SEARCH_WEB_MAC).command_id(IDC_FOCUS_SEARCH),
@@ -236,6 +239,7 @@
                 }),
             // The "Start Dictation..." and "Emoji & Symbols" items are
             // inserted by AppKit.
+#endif
           })
           .Build();
   return item;
@@ -506,9 +510,9 @@
   using Builder = base::scoped_nsobject<NSMenuItem> (*)(
       NSApplication*, id, const std::u16string&, bool);
   static const Builder kBuilderFuncs[] = {
-      &BuildAppMenu,     &BuildFileMenu,      &BuildEditMenu,   &BuildViewMenu,
-      &BuildHistoryMenu, &BuildBookmarksMenu, &BuildPeopleMenu, &BuildTabMenu,
-      &BuildWindowMenu,  &BuildHelpMenu,
+      &BuildAppMenu,     /*&BuildFileMenu,*/      &BuildEditMenu,  /* &BuildViewMenu,
+      &BuildHistoryMenu, &BuildBookmarksMenu, &BuildPeopleMenu, &BuildTabMenu,*/
+      &BuildWindowMenu,  /*&BuildHelpMenu,*/
   };
   for (auto* builder : kBuilderFuncs) {
     auto item = builder(nsapp, app_delegate, product_name, is_pwa);
