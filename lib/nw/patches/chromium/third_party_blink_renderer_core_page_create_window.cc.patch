diff -r -u --color up/chromium/third_party/blink/renderer/core/page/create_window.cc nw/chromium/third_party/blink/renderer/core/page/create_window.cc
--- up/chromium/third_party/blink/renderer/core/page/create_window.cc	2023-02-21 19:03:23.000000000 +0000
+++ nw/chromium/third_party/blink/renderer/core/page/create_window.cc	2023-02-25 19:07:23.277857640 +0000
@@ -58,6 +58,8 @@
 #include "third_party/blink/renderer/platform/wtf/text/string_to_number.h"
 #include "third_party/blink/renderer/platform/wtf/text/string_view.h"
 
+#include "third_party/blink/renderer/core/frame/local_frame_client.h"
+
 namespace blink {
 
 // Though isspace() considers \t and \v to be whitespace, Win IE doesn't when
@@ -279,11 +281,11 @@
 
 Frame* CreateNewWindow(LocalFrame& opener_frame,
                        FrameLoadRequest& request,
-                       const AtomicString& frame_name) {
+                       const AtomicString& frame_name, WebString* manifest) {
   LocalDOMWindow& opener_window = *opener_frame.DomWindow();
   DCHECK(request.GetResourceRequest().RequestorOrigin() ||
          opener_window.Url().IsEmpty());
-  DCHECK_EQ(kNavigationPolicyCurrentTab, request.GetNavigationPolicy());
+  //DCHECK_EQ(kNavigationPolicyCurrentTab, request.GetNavigationPolicy());
 
   if (opener_window.document()->PageDismissalEventBeingDispatched() !=
       Document::kNoDismissal) {
@@ -350,10 +352,13 @@
                                                        new_namespace_id);
   }
 
+  WebString manifest_str("");
+  if (manifest)
+    manifest_str = (*manifest);
   bool consumed_user_gesture = false;
   Page* page = old_page->GetChromeClient().CreateWindow(
       &opener_frame, request, frame_name, features, sandbox_flags,
-      new_namespace_id, consumed_user_gesture);
+      new_namespace_id, consumed_user_gesture, &manifest_str);
   if (!page)
     return nullptr;
 
@@ -388,7 +393,7 @@
 
   page->GetChromeClient().Show(frame, opener_frame,
                                request.GetNavigationPolicy(), *window_features,
-                               consumed_user_gesture);
+                               consumed_user_gesture, &manifest_str);
   MaybeLogWindowOpen(opener_frame);
   return &frame;
 }
