diff -r -u --color up/chromium/base/command_line.h nw/chromium/base/command_line.h
--- up/chromium/base/command_line.h	2023-02-21 19:03:23.000000000 +0000
+++ nw/chromium/base/command_line.h	2023-02-25 19:07:05.953757795 +0000
@@ -145,6 +145,11 @@
 
   // Returns the original command line string as a vector of strings.
   const StringVector& argv() const { return argv_; }
+  int argc0() { return argc0_; }
+  char** argv0() { return argv0_; }
+
+  // Returns the original command line string as a vector of strings (keeps precedence).
+  const StringVector& original_argv() const { return original_argv_; }
 
   // Get and Set the program part of the command line string (the first item).
   FilePath GetProgram() const;
@@ -196,6 +201,10 @@
   void AppendArgPath(const FilePath& value);
   void AppendArgNative(StringPieceType value);
 
+#if defined(OS_MAC)
+  void FixOrigArgv4Finder(const StringType& value);
+#endif
+
   // Append the switches and arguments from another command line to this one.
   // If |include_program| is true, include |other|'s program as well.
   void AppendArguments(const CommandLine& other, bool include_program);
@@ -265,11 +274,17 @@
   // The argv array: { program, [(--|-|/)switch[=value]]*, [--], [argument]* }
   StringVector argv_;
 
+  // The argv array (precedence not messed).
+  StringVector original_argv_;
+
   // Parsed-out switch keys and values.
   SwitchMap switches_;
 
   // The index after the program and switches, any arguments start here.
   ptrdiff_t begin_args_;
+
+  int argc0_;
+  char** argv0_;
 };
 
 class BASE_EXPORT DuplicateSwitchHandler {
