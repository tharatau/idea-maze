diff -r -u --color up/chromium/chrome/browser/pdf/pdf_extension_test.cc nw/chromium/chrome/browser/pdf/pdf_extension_test.cc
--- up/chromium/chrome/browser/pdf/pdf_extension_test.cc	2023-02-15 18:46:36.000000000 +0000
+++ nw/chromium/chrome/browser/pdf/pdf_extension_test.cc	2023-02-19 17:36:28.179445617 +0000
@@ -2727,6 +2727,28 @@
   EXPECT_EQ("http://www.example.com/", url.spec());
 }
 
+IN_PROC_BROWSER_TEST_F(PDFExtensionLinkClickTest, NWJSClick) {
+  MimeHandlerViewGuest* guest = LoadTestLinkPdfGetMimeHandlerView();
+
+  ASSERT_EQ(1U, chrome::GetTotalBrowserCount());
+
+  WebContents* web_contents = GetActiveWebContents();
+
+  SimulateMouseClickAt(guest, 0,
+                       blink::WebMouseEvent::Button::kLeft,
+                       GetLinkPosition(guest));
+  ui_test_utils::WaitForBrowserToOpen();
+
+  ASSERT_EQ(2U, chrome::GetTotalBrowserCount());
+
+  WebContents* active_web_contents =
+      chrome::FindLastActive()->tab_strip_model()->GetActiveWebContents();
+  ASSERT_NE(web_contents, active_web_contents);
+
+  const GURL& url = active_web_contents->GetVisibleURL();
+  EXPECT_EQ("http://www.example.com/", url.spec());
+}
+
 // This test opens a PDF by clicking a link via javascript and verifies that
 // the PDF is loaded and functional by clicking a link in the PDF. The link
 // click in the PDF opens a new tab. The main page handles the pageShow event
