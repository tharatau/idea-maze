diff -r -u --color up/chromium/chrome/browser/web_applications/os_integration/web_app_shortcut_win.cc nw/chromium/chrome/browser/web_applications/os_integration/web_app_shortcut_win.cc
--- up/chromium/chrome/browser/web_applications/os_integration/web_app_shortcut_win.cc	2023-02-15 18:46:36.000000000 +0000
+++ nw/chromium/chrome/browser/web_applications/os_integration/web_app_shortcut_win.cc	2023-02-19 17:36:29.903449981 +0000
@@ -50,15 +50,15 @@
 constexpr base::FilePath::CharType kIconChecksumFileExt[] =
     FILE_PATH_LITERAL(".ico.md5");
 
-constexpr base::FilePath::CharType kChromeProxyExecutable[] =
-    FILE_PATH_LITERAL("chrome_proxy.exe");
+//constexpr base::FilePath::CharType kChromeProxyExecutable[] =
+//    FILE_PATH_LITERAL("nw.exe");
 
 }  // namespace
 
 base::FilePath GetChromeProxyPath() {
   base::FilePath chrome_dir;
-  CHECK(base::PathService::Get(base::DIR_EXE, &chrome_dir));
-  return chrome_dir.Append(kChromeProxyExecutable);
+  CHECK(base::PathService::Get(base::FILE_EXE, &chrome_dir));
+  return chrome_dir; //.Append(kChromeProxyExecutable);
 }
 
 namespace internals {
@@ -440,12 +440,19 @@
                                      const base::FilePath& icon_file,
                                      HWND hwnd,
                                      const ShortcutInfo& shortcut_info) {
+  base::CommandLine command_line(base::CommandLine::NO_PROGRAM);
+#if 0
   base::CommandLine command_line =
       shell_integration::CommandLineArgsForLauncher(
           shortcut_info.url, shortcut_info.extension_id,
           shortcut_info.profile_path, "");
 
+#endif
   command_line.SetProgram(GetChromeProxyPath());
+  const base::CommandLine::StringVector& args = base::CommandLine::ForCurrentProcess()->GetArgs();
+  if (args.size())
+	  command_line.AppendArgNative(args[0]);
+
   ui::win::SetRelaunchDetailsForWindow(command_line.GetCommandLineString(),
                                        base::AsWString(shortcut_info.title),
                                        hwnd);
