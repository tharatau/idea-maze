diff -r -u --color up/chromium/chrome/browser/renderer_context_menu/context_menu_content_type_platform_app.cc nw/chromium/chrome/browser/renderer_context_menu/context_menu_content_type_platform_app.cc
--- up/chromium/chrome/browser/renderer_context_menu/context_menu_content_type_platform_app.cc	2023-02-21 19:03:23.000000000 +0000
+++ nw/chromium/chrome/browser/renderer_context_menu/context_menu_content_type_platform_app.cc	2023-02-24 20:12:03.676815431 +0000
@@ -11,6 +11,8 @@
 #include "extensions/common/extension.h"
 #include "extensions/common/manifest.h"
 
+#include "content/nw/src/common/shell_switches.h"
+
 using extensions::Extension;
 using extensions::ProcessManager;
 
@@ -38,6 +40,14 @@
 
   DCHECK(platform_app->is_platform_app());
 
+#if defined(NWJS_SDK)
+  bool enable_devtools = true;
+  const base::CommandLine* command_line =
+      base::CommandLine::ForCurrentProcess();
+  if (command_line->HasSwitch(switches::kDisableDevTools))
+    enable_devtools = false;
+#endif
+
   switch (group) {
     // Add undo/redo, cut/copy/paste etc for text fields.
     case ITEM_GROUP_EDITABLE:
@@ -45,12 +55,10 @@
       return ContextMenuContentType::SupportsGroup(group);
     case ITEM_GROUP_CURRENT_EXTENSION:
       return true;
+#if defined(NWJS_SDK)
     case ITEM_GROUP_DEVTOOLS_UNPACKED_EXT:
-      // Add dev tools for unpacked extensions.
-      return extensions::Manifest::IsUnpackedLocation(
-                 platform_app->location()) ||
-             base::CommandLine::ForCurrentProcess()->HasSwitch(
-                 switches::kDebugPackedApps);
+      return enable_devtools;
+#endif
     default:
       return false;
   }
