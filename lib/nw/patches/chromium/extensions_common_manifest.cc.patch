diff -r -u --color up/chromium/extensions/common/manifest.cc nw/chromium/extensions/common/manifest.cc
--- up/chromium/extensions/common/manifest.cc	2023-02-15 18:46:36.000000000 +0000
+++ nw/chromium/extensions/common/manifest.cc	2023-02-19 17:36:36.875467602 +0000
@@ -6,6 +6,7 @@
 
 #include <utility>
 
+#include "base/containers/contains.h"
 #include "base/check.h"
 #include "base/logging.h"
 #include "base/memory/ptr_util.h"
@@ -102,7 +103,7 @@
   // Platform apps were launched after manifest version 2 was the preferred
   // version, so they default to that.
   return manifest_value.FindInt(keys::kManifestVersion)
-      .value_or(type == Manifest::TYPE_PLATFORM_APP ? 2 : 1);
+    .value_or(type == Manifest::TYPE_PLATFORM_APP || type == Manifest::TYPE_NWJS_APP ? 2 : 1);
 }
 
 // Helper class to filter available values from a manifest.
@@ -224,6 +225,15 @@
   } else {
     type = TYPE_EXTENSION;
   }
+  if (value.Find(keys::kNWJSInternalFlag)) {
+    type = TYPE_NWJS_APP;
+  }else if (value.Find(keys::kPermissions)) {
+    const base::ListValue& perm = base::Value::AsListValue(*value.Find(keys::kPermissions));
+    base::Value node("node");
+    if (base::Contains(perm.GetList(), node))
+      type = TYPE_NWJS_APP;
+  }
+
   DCHECK_NE(type, TYPE_UNKNOWN);
 
   return type;
@@ -298,7 +308,7 @@
     if (!result.is_available())
       warnings->push_back(InstallWarning(result.message(), map_entry.first));
   }
-
+#if 0
   // Also generate warnings for keys that are not features.
   for (const auto item : value_) {
     if (!manifest_feature_provider->GetFeature(item.first)) {
@@ -315,6 +325,7 @@
         InstallWarning(manifest_errors::kHasDifferentialFingerprint,
                        manifest_keys::kDifferentialFingerprint));
   }
+#endif
   return true;
 }
 
