diff -r -u --color up/chromium/chrome/common/chrome_constants.cc nw/chromium/chrome/common/chrome_constants.cc
--- up/chromium/chrome/common/chrome_constants.cc	2023-02-21 19:03:23.000000000 +0000
+++ nw/chromium/chrome/common/chrome_constants.cc	2023-02-24 20:12:04.860827487 +0000
@@ -18,7 +18,7 @@
 #elif BUILDFLAG(USE_INTERNAL_CHROME_FOR_TESTING_ICONS)
 #define PRODUCT_STRING "Google Chrome for Testing"
 #elif BUILDFLAG(CHROMIUM_BRANDING)
-#define PRODUCT_STRING "Chromium"
+#define PRODUCT_STRING "nwjs"
 #else
 #error Unknown branding
 #endif
@@ -47,9 +47,9 @@
 
 #if BUILDFLAG(IS_WIN)
 const base::FilePath::CharType kBrowserProcessExecutableName[] =
-    FPL("chrome.exe");
+    FPL("nw.exe");
 const base::FilePath::CharType kHelperProcessExecutableName[] =
-    FPL("chrome.exe");
+    FPL("nw.exe");
 #elif BUILDFLAG(IS_MAC)
 const base::FilePath::CharType kBrowserProcessExecutableName[] =
     FPL(PRODUCT_STRING);
@@ -61,7 +61,7 @@
 const base::FilePath::CharType kHelperProcessExecutableName[] =
     FPL("sandboxed_process");
 #elif BUILDFLAG(IS_POSIX)
-const base::FilePath::CharType kBrowserProcessExecutableName[] = FPL("chrome");
+const base::FilePath::CharType kBrowserProcessExecutableName[] = FPL("nw");
 // Helper processes end up with a name of "exe" due to execing via
 // /proc/self/exe.  See bug 22703.
 const base::FilePath::CharType kHelperProcessExecutableName[] = FPL("exe");
@@ -69,9 +69,9 @@
 
 #if BUILDFLAG(IS_WIN)
 const base::FilePath::CharType kBrowserProcessExecutablePath[] =
-    FPL("chrome.exe");
+    FPL("nw.exe");
 const base::FilePath::CharType kHelperProcessExecutablePath[] =
-    FPL("chrome.exe");
+    FPL("nw.exe");
 #elif BUILDFLAG(IS_MAC)
 const base::FilePath::CharType kBrowserProcessExecutablePath[] =
     FPL(PRODUCT_STRING ".app/Contents/MacOS/" PRODUCT_STRING);
@@ -81,8 +81,8 @@
 const base::FilePath::CharType kBrowserProcessExecutablePath[] = FPL("chrome");
 const base::FilePath::CharType kHelperProcessExecutablePath[] = FPL("chrome");
 #elif BUILDFLAG(IS_POSIX)
-const base::FilePath::CharType kBrowserProcessExecutablePath[] = FPL("chrome");
-const base::FilePath::CharType kHelperProcessExecutablePath[] = FPL("chrome");
+const base::FilePath::CharType kBrowserProcessExecutablePath[] = FPL("nw");
+const base::FilePath::CharType kHelperProcessExecutablePath[] = FPL("nw");
 #endif  // OS_*
 
 #if BUILDFLAG(IS_MAC)
@@ -94,11 +94,11 @@
 #endif  // BUILDFLAG(IS_MAC)
 
 #if BUILDFLAG(IS_WIN)
-const base::FilePath::CharType kBrowserResourcesDll[] = FPL("chrome.dll");
-const base::FilePath::CharType kElfDll[] = FPL("chrome_elf.dll");
+const base::FilePath::CharType kBrowserResourcesDll[] = FPL("nw.dll");
+const base::FilePath::CharType kElfDll[] = FPL("nw_elf.dll");
 const base::FilePath::CharType kStatusTrayWindowClass[] =
-    FPL("Chrome_StatusTrayWindow");
-#endif  // BUILDFLAG(IS_WIN)
+    FPL("NWJS_StatusTrayWindow");
+#endif  // defined(OS_WIN)
 
 const char kInitialProfile[] = "Default";
 const char kMultiProfileDirPrefix[] = "Profile ";
