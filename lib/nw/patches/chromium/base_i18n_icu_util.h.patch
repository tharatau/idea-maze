diff -r -u --color up/chromium/base/i18n/icu_util.h nw/chromium/base/i18n/icu_util.h
--- up/chromium/base/i18n/icu_util.h	2023-02-21 19:03:23.000000000 +0000
+++ nw/chromium/base/i18n/icu_util.h	2023-02-25 19:07:05.985757992 +0000
@@ -49,6 +49,25 @@
     PlatformFile data_fd,
     const MemoryMappedFile::Region& data_region);
 
+// Returns a void pointer to the memory mapped ICU data file.
+//
+// There are cases on Android where we would be unsafely reusing a file
+// descriptor within the same process when initializing two copies of ICU from
+// different binaries in the same address space. This returns an unowned
+// pointer to the memory mapped icu data file; consumers copies of base must
+// not outlive the copy of base that owns the memory mapped file.
+BASE_I18N_EXPORT const uint8_t* GetRawIcuMemory();
+
+// Initializes ICU memory
+//
+// This does nothing in component builds; this initialization should only be
+// done in cases where there could be two copies of base in a single process in
+// non-component builds. (The big example is standalone service libraries: the
+// Service Manager will have a copy of base linked in, and the majority of
+// service libraries will have base linked in but in non-component builds,
+// these will be separate copies of base.)
+BASE_I18N_EXPORT bool InitializeICUFromRawMemory(const uint8_t* raw_memory);
+
 BASE_I18N_EXPORT void ResetGlobalsForTesting();
 
 #if BUILDFLAG(IS_FUCHSIA)
