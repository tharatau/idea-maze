diff -r -u --color up/chromium/chrome/browser/ui/browser_commands.cc nw/chromium/chrome/browser/ui/browser_commands.cc
--- up/chromium/chrome/browser/ui/browser_commands.cc	2023-02-15 18:46:36.000000000 +0000
+++ nw/chromium/chrome/browser/ui/browser_commands.cc	2023-02-19 17:36:29.387448675 +0000
@@ -196,6 +196,7 @@
 const char kOsOverrideForTabletSite[] = "Linux; Android 9; Chrome tablet";
 const char kChPlatformOverrideForTabletSite[] = "Android";
 
+#if 0
 translate::TranslateBubbleUiEvent TranslateBubbleResultToUiEvent(
     ShowTranslateBubbleResult result) {
   switch (result) {
@@ -212,6 +213,7 @@
           BUBBLE_NOT_SHOWN_EDITABLE_FIELD_IS_ACTIVE;
   }
 }
+#endif
 
 // Creates a new tabbed browser window, with the same size, type and profile as
 // |original_browser|'s window, inserts |contents| into it, and shows it.
@@ -483,6 +485,7 @@
 }
 
 void NewEmptyWindow(Profile* profile, bool should_trigger_session_restore) {
+#if 0
   bool off_the_record = profile->IsOffTheRecord();
   PrefService* prefs = profile->GetPrefs();
   if (off_the_record) {
@@ -522,6 +525,7 @@
       OpenEmptyWindow(profile->GetOriginalProfile());
     }
   }
+#endif
 }
 
 Browser* OpenEmptyWindow(Profile* profile,
@@ -1285,6 +1289,7 @@
 }
 
 void Translate(Browser* browser) {
+#if 0
   if (!browser->window()->IsActive())
     return;
 
@@ -1313,6 +1318,7 @@
   if (result != ShowTranslateBubbleResult::SUCCESS)
     translate::ReportTranslateBubbleUiAction(
         TranslateBubbleResultToUiEvent(result));
+#endif
 }
 
 void ManagePasswordsForPage(Browser* browser) {
